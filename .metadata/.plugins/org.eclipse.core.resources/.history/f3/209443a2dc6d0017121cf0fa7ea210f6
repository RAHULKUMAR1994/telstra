import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.concurrent.Executors;
import java.util.concurrent.RejectedExecutionHandler;
import java.util.concurrent.ThreadFactory;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.TimeUnit;


 class TempSer implements Runnable {

	private String threadName =  "";
	private String fileName =  "";
	private Thread thread;
	private DataOutputStream dlink = null; 

	public TempSer(String name, String fname, DataOutputStream link)
	{
		threadName = name;
		fileName = fname;
		dlink = link;
	}

	public void run()
	{

		String message = "";
		FileReader in = null;
		try
		{
			in = new FileReader(fileName + ".txt");

			System.out.println(fileName);

			int d = in.read();


			while(d!= -1)
			{
				message += (char)d;
				d = in.read();

			//	System.out.println(threadName +"..........."+ message);


				

				//thread.sleep(500);
			}

			dlink.writeUTF(message);


		}

		catch(Exception e)
		{
			System.out.println(e);
		}

	}

	public void start()
	{
		System.out.println("Start thread ........" + threadName);


		thread = new Thread(this,threadName);
		thread.start();

	}
}

 
class handleSuspendedThread implements RejectedExecutionHandler 
{
public void rejectedExecution(Runnable r, ThreadPoolExecutor exe) {
		
	System.out.println(exe + " " + r);
		
	}
}

public class ExeServer
{
	public static void main(String a[]) throws IOException
	{
		ServerSocket se = new ServerSocket(6666);
		
		DataInputStream din = null;
		DataOutputStream dout = null;
		
		Socket socket = null;	
		
		handleSuspendedThread handler = new handleSuspendedThread();
		
		ThreadFactory factory = Executors.defaultThreadFactory();
		
		ThreadPoolExecutor executor =  new ThreadPoolExecutor(2, 4, 10, TimeUnit.SECONDS, new ArrayBlockingQueue<Runnable>(2), factory, handler); 
		
		
		
		while(true)
		{
			socket = se.accept();
			
			din = new DataInputStream(socket.getInputStream());
			dout = new DataOutputStream(socket.getOutputStream());
			
			String data = din.readUTF();
			
			String array[] = data.split(";");
			
			String thre = array[0];
			String fn = array[1];
			
			executor.execute(new Server(thre,"C:\\Users\\rahulkumar.254927\\workspace\\Multithreading\\src\\"+fn,dout));
			
			
			
			
		}
		
 		
		
	}
}